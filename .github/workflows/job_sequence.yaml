name: Terraform Workflow

on:
  workflow_dispatch:

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.create-issue.outputs.issue_number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Terraform Init
        run: echo "terraform init"

      - name: Terraform Plan
        run: echo "terraform plan -out=tfplan"

      - name: Create Issue for User Input
        id: create-issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_TITLE: "Workflow Run #${{ github.run_number }}: ${{ github.workflow }}"
        run: |
          echo "## User Input Required" > issue.md
          echo "Please review the Terraform plan and comment 'yes' to proceed or 'no' to abort." >> issue.md
          echo "terraform plan -var-file var\px.ttvars" >> issue.md
          gh issue create --title "$ISSUE_TITLE" --body-file issue.md
          issue_number=$(gh issue list --limit 1 --json number,title --jq '.[] | select(.title=="${ISSUE_TITLE}") | .number')
          #echo "::set-output name=issue_number::$issue_number"
          echo "issue_number=$issue_number" >> $GITHUB_OUTPUT
          echo "$issue_number"

  wait-for-input:
    needs: terraform-plan
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.wait-for-input.outputs.proceed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Wait for User Input
        id: wait-for-input
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ needs.terraform-plan.outputs.issue_number }}
        run: |
          while true; do
            comments=$(gh issue view $ISSUE_NUMBER --json comments --jq '.comments[].body')
            if echo "$comments" | grep -q "yes"; then
              echo "User approved. Proceeding to apply."
              echo "::set-output name=proceed::true"
              break
            elif echo "$comments" | grep -q "no"; then
              echo "User denied. Aborting."
              echo "::set-output name=proceed::false"
              break
            fi
            echo "Waiting for user input..."
            sleep 20
          done

  terraform-apply:
    needs: wait-for-input
    if: ${{ needs.wait-for-input.outputs.proceed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Terraform Apply
        run: echo "terraform apply tfplan"

      - name: Close Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ needs.terraform-plan.outputs.issue_number }}
        run: |
          gh issue close $ISSUE_NUMBER --comment "Terraform apply completed successfully."
