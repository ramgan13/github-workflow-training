name: Terraform Workflow

on:
  workflow_dispatch:

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Init
        run: echo "terraform init"

      - name: Terraform Plan
        run: echo "terraform plan -out=tfplan"

      - name: Create Issue for User Input
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
        run: |
          echo "## User Input Required" > issue.md
          echo "Please review the Terraform plan and comment 'yes' to proceed or 'no' to abort." >> issue.md
          gh issue create --title "User Input Required" --body-file issue.md

  wait-for-input:
    needs: terraform-plan
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.wait-for-input.outputs.proceed }}
    steps:
      - name: Wait for User Input
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
        id: wait-for-input
        run: |
          while true; do
            comments=$(gh issue view 1 --json comments --jq '.comments[].body')
            if echo "$comments" | grep -q "yes"; then
              echo "User approved. Proceeding to apply."
              echo "::set-output name=proceed::true"
              break
            elif echo "$comments" | grep -q "no"; then
              echo "User denied. Aborting."
              echo "::set-output name=proceed::false"
              break
            fi
            echo "Waiting for user input..."
            sleep 30
          done

  terraform-apply:
    needs: wait-for-input
    if: ${{ needs.wait-for-input.outputs.proceed == 'true' }}
    runs-on: ubuntu-latest
    steps:

      - name: Terraform Apply
        run: echo "terraform apply tfplan"
